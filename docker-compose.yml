version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: inventory_postgres
    environment:
      POSTGRES_DB: inventory_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - inventory_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend Server
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: inventory_backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/inventory_db
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: postgres123
      PGDATABASE: inventory_db
      PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - inventory_network
    restart: no

  # Frontend Client
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: inventory_frontend
    environment:
      VITE_API_URL: http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - inventory_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  inventory_network:
    driver: bridge